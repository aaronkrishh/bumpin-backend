// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Stage {
  PREP
  POOL
  PLAYOFF
  COMPLETE
}

model Tournament {
  id        Int      @id @default(autoincrement())
  name      String
  teamCount Int
  teams Team[]
  bracketType Int
  stage Stage @default(PREP)
  poolsCount Int
  scores Score[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum GameType {
  POOL
  PLAYOFF
}

model Score {
  id     Int     @id @default(autoincrement())
  tournament Tournament @relation(fields: [tournamentId], references: [id])
  tournamentId Int
  teamAId Int
  teamA Team @relation("TeamAScores", fields: [teamAId], references: [id])
  teamBId Int
  teamB Team @relation("TeamBScores", fields: [teamBId], references: [id])
  teamAPoints Int []
  teamBPoints Int []
  sets Int
  gameType GameType
  winner String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Pool {
  A
  B
  C
  D
}

model Team {
  id     Int     @id @default(autoincrement())
  tournament Tournament @relation(fields: [tournamentId], references: [id])
  tournamentId Int
  name String
  pool Pool
  seed Int?  // Seeding for playoffs. Can be Within own pool or total
  players Player[]
  teamAScores Score[] @relation("TeamAScores")
  teamBScores Score[] @relation("TeamBScores")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Gender {
  MALE
  FEMALE
}

model Player {
  id     Int     @id @default(autoincrement())
  team Team @relation(fields: [teamId], references: [id])
  teamId Int
  firstName String
  lastName String
  gender Gender
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
